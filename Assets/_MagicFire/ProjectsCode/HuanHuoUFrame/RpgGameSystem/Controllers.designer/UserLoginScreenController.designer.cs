// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MagicFire.HuanHuoUFrame {
    using MagicFire.HuanHuoUFrame;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine.UI;
    
    
    public class UserLoginScreenControllerBase : uFrame.MVVM.Controller {
        
        private uFrame.MVVM.ViewModels.IViewModelManager<UserLoginScreenViewModel> _UserLoginScreenViewModelManager;
        
        private MessageBoxViewModel _MessageBox;
        
        private UserLoginScreenViewModel _UserLoginScreen;
        
        private RpgMainScreenViewModel _RpgMainScreen;
        
        [uFrame.IOC.InjectAttribute("UserLoginScreen")]
        public uFrame.MVVM.ViewModels.IViewModelManager<UserLoginScreenViewModel> UserLoginScreenViewModelManager {
            get {
                return _UserLoginScreenViewModelManager;
            }
            set {
                _UserLoginScreenViewModelManager = value;
            }
        }
        
        [uFrame.IOC.InjectAttribute("MessageBox")]
        public MessageBoxViewModel MessageBox {
            get {
                return _MessageBox;
            }
            set {
                _MessageBox = value;
            }
        }
        
        [uFrame.IOC.InjectAttribute("UserLoginScreen")]
        public UserLoginScreenViewModel UserLoginScreen {
            get {
                return _UserLoginScreen;
            }
            set {
                _UserLoginScreen = value;
            }
        }
        
        [uFrame.IOC.InjectAttribute("RpgMainScreen")]
        public RpgMainScreenViewModel RpgMainScreen {
            get {
                return _RpgMainScreen;
            }
            set {
                _RpgMainScreen = value;
            }
        }
        
        public IEnumerable<UserLoginScreenViewModel> UserLoginScreenViewModels {
            get {
                return UserLoginScreenViewModelManager.ViewModels;
            }
        }
        
        public override void Setup() {
            base.Setup();
            // This is called when the controller is created
        }
        
        public override void Initialize(uFrame.MVVM.ViewModels.ViewModel viewModel) {
            base.Initialize(viewModel);
            // This is called when a viewmodel is created
            this.InitializeUserLoginScreen(((UserLoginScreenViewModel)(viewModel)));
        }
        
        public virtual UserLoginScreenViewModel CreateUserLoginScreen() {
            return ((UserLoginScreenViewModel)(this.Create(Guid.NewGuid().ToString())));
        }
        
        public override uFrame.MVVM.ViewModels.ViewModel CreateEmpty() {
            return new UserLoginScreenViewModel(this.EventAggregator);
        }
        
        public virtual void InitializeUserLoginScreen(UserLoginScreenViewModel viewModel) {
            // This is called when a UserLoginScreenViewModel is created
            viewModel.UserLogin.Action = this.UserLoginHandler;
            viewModel.CloseRegistePanel.Action = this.CloseRegistePanelHandler;
            viewModel.ShowRegistePanel.Action = this.ShowRegistePanelHandler;
            viewModel.Test01Login.Action = this.Test01LoginHandler;
            viewModel.Test02Login.Action = this.Test02LoginHandler;
            viewModel.Test03Login.Action = this.Test03LoginHandler;
            viewModel.RegisteUser.Action = this.RegisteUserHandler;
            UserLoginScreenViewModelManager.Add(viewModel);
        }
        
        public override void DisposingViewModel(uFrame.MVVM.ViewModels.ViewModel viewModel) {
            base.DisposingViewModel(viewModel);
            UserLoginScreenViewModelManager.Remove(viewModel);
        }
        
        public virtual void UserLoginHandler(UserLoginCommand command) {
            this.UserLogin(command.Sender as UserLoginScreenViewModel, command);
        }
        
        public virtual void CloseRegistePanelHandler(CloseRegistePanelCommand command) {
            this.CloseRegistePanel(command.Sender as UserLoginScreenViewModel, command);
        }
        
        public virtual void ShowRegistePanelHandler(ShowRegistePanelCommand command) {
            this.ShowRegistePanel(command.Sender as UserLoginScreenViewModel, command);
        }
        
        public virtual void Test01LoginHandler(Test01LoginCommand command) {
            this.Test01Login(command.Sender as UserLoginScreenViewModel, command);
        }
        
        public virtual void Test02LoginHandler(Test02LoginCommand command) {
            this.Test02Login(command.Sender as UserLoginScreenViewModel, command);
        }
        
        public virtual void Test03LoginHandler(Test03LoginCommand command) {
            this.Test03Login(command.Sender as UserLoginScreenViewModel, command);
        }
        
        public virtual void RegisteUserHandler(RegisteUserCommand command) {
            this.RegisteUser(command.Sender as UserLoginScreenViewModel, command);
        }
        
        public virtual void UserLogin(UserLoginScreenViewModel viewModel, UserLoginCommand arg) {
        }
        
        public virtual void CloseRegistePanel(UserLoginScreenViewModel viewModel, CloseRegistePanelCommand arg) {
        }
        
        public virtual void ShowRegistePanel(UserLoginScreenViewModel viewModel, ShowRegistePanelCommand arg) {
        }
        
        public virtual void Test01Login(UserLoginScreenViewModel viewModel, Test01LoginCommand arg) {
        }
        
        public virtual void Test02Login(UserLoginScreenViewModel viewModel, Test02LoginCommand arg) {
        }
        
        public virtual void Test03Login(UserLoginScreenViewModel viewModel, Test03LoginCommand arg) {
        }
        
        public virtual void RegisteUser(UserLoginScreenViewModel viewModel, RegisteUserCommand arg) {
        }
    }
}
