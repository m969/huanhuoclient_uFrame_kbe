// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MagicFire.HuanHuoUFrame {
    using MagicFire.HuanHuoUFrame;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Json;
    using uFrame.Kernel;
    using uFrame.Kernel.Serialization;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    
    
    public partial class onCreateAccountResultEventBase : uFrame.MVVM.IJSonSerializable {
        
        private Int32 _RetCode;
        
        private byte[] _Datas;
        
        public Int32 RetCode {
            get {
                return _RetCode;
            }
            set {
                _RetCode = value;
            }
        }
        
        public byte[] Datas {
            get {
                return _Datas;
            }
            set {
                _Datas = value;
            }
        }
        
        public virtual string Serialize() {
            var jsonObject = new JSONClass();
            jsonObject.Add("RetCode", new JSONData(this.RetCode));
            return jsonObject.ToString();
        }
        
        public virtual void Deserialize(string json) {
            var node = JSON.Parse(json);
            if (node["RetCode"] != null) {
                this.RetCode = node["RetCode"].AsInt;
            }
        }
    }
    
    public partial class onLoginFailedEventBase : uFrame.MVVM.IJSonSerializable {
        
        private Int32 _FailedCode;
        
        public Int32 FailedCode {
            get {
                return _FailedCode;
            }
            set {
                _FailedCode = value;
            }
        }
        
        public virtual string Serialize() {
            var jsonObject = new JSONClass();
            jsonObject.Add("FailedCode", new JSONData(this.FailedCode));
            return jsonObject.ToString();
        }
        
        public virtual void Deserialize(string json) {
            var node = JSON.Parse(json);
            if (node["FailedCode"] != null) {
                this.FailedCode = node["FailedCode"].AsInt;
            }
        }
    }
}
