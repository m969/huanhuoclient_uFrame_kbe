// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MagicFire.HuanHuoUFrame {
    using MagicFire.HuanHuoUFrame;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.Kernel;
    using uFrame.Kernel.Serialization;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.MVVM.Services;
    using uFrame.MVVM.ViewModels;
    using UniRx;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class RegistePanelBase : uFrame.MVVM.Views.ViewBase {
        
        [UnityEngine.SerializeField()]
        [uFrame.MVVM.Attributes.UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _Username;
        
        [UnityEngine.SerializeField()]
        [uFrame.MVVM.Attributes.UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _CurrentServerIp;
        
        [UnityEngine.SerializeField()]
        [uFrame.MVVM.Attributes.UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public MagicFire.HuanHuoUFrame.RegistePanel _RegistePanel;
        
        [UnityEngine.SerializeField()]
        [uFrame.MVVM.Attributes.UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public Int32 _CurrentServerNum;
        
        [UnityEngine.SerializeField()]
        [uFrame.MVVM.Attributes.UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _Password;
        
        [UnityEngine.SerializeField()]
        [uFrame.MVVM.Attributes.UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public String _SecondPassword;
        
        [UnityEngine.SerializeField()]
        [uFrame.MVVM.Attributes.UFGroup("View Model Properties")]
        [UnityEngine.HideInInspector()]
        public UnityEngine.UI.Dropdown _ServerList;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("Password")]
        [UnityEngine.HideInInspector()]
        public bool _BindPassword = true;
        
        [uFrame.MVVM.Attributes.UFGroup("Password")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_PasswordonlyWhenChanged")]
        protected bool _PasswordOnlyWhenChanged;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("SecondPassword")]
        [UnityEngine.HideInInspector()]
        public bool _BindSecondPassword = true;
        
        [uFrame.MVVM.Attributes.UFGroup("SecondPassword")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_SecondPasswordonlyWhenChanged")]
        protected bool _SecondPasswordOnlyWhenChanged;
        
        [uFrame.MVVM.Attributes.UFGroup("SecondPassword")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_SecondPasswordinput")]
        protected UnityEngine.UI.InputField _SecondPasswordInput;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("Username")]
        [UnityEngine.HideInInspector()]
        public bool _BindUsername = true;
        
        [uFrame.MVVM.Attributes.UFGroup("Username")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_Usernameinput")]
        protected UnityEngine.UI.InputField _UsernameInput;
        
        [uFrame.MVVM.Attributes.UFGroup("Password")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_Passwordinput")]
        protected UnityEngine.UI.InputField _PasswordInput;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("RegisteUser")]
        [UnityEngine.HideInInspector()]
        public bool _BindRegisteUser = true;
        
        [uFrame.MVVM.Attributes.UFGroup("RegisteUser")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_RegisteUserbutton")]
        protected UnityEngine.UI.Button _RegisteUserButton;
        
        [uFrame.MVVM.Attributes.UFToggleGroup("CloseRegistePanel")]
        [UnityEngine.HideInInspector()]
        public bool _BindCloseRegistePanel = true;
        
        [uFrame.MVVM.Attributes.UFGroup("CloseRegistePanel")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_CloseRegistePanelbutton")]
        protected UnityEngine.UI.Button _CloseRegistePanelButton;
        
        [uFrame.MVVM.Attributes.UFGroup("Username")]
        [UnityEngine.SerializeField()]
        [UnityEngine.HideInInspector()]
        [UnityEngine.Serialization.FormerlySerializedAsAttribute("_UsernameonlyWhenChanged")]
        protected bool _UsernameOnlyWhenChanged;
        
        public override string DefaultIdentifier {
            get {
                return "UserLoginScreen";
            }
        }
        
        public override System.Type ViewModelType {
            get {
                return typeof(UserLoginScreenViewModel);
            }
        }
        
        public UserLoginScreenViewModel UserLoginScreen {
            get {
                return (UserLoginScreenViewModel)ViewModelObject;
            }
        }
        
        protected override void InitializeViewModel(uFrame.MVVM.ViewModels.ViewModel model) {
            base.InitializeViewModel(model);
            // NOTE: this method is only invoked if the 'Initialize ViewModel' is checked in the inspector.
            // var vm = model as UserLoginScreenViewModel;
            // This method is invoked when applying the data from the inspector to the viewmodel.  Add any view-specific customizations here.
            var registepanel = ((UserLoginScreenViewModel)model);
            registepanel.Username = this._Username;
            registepanel.CurrentServerIp = this._CurrentServerIp;
            registepanel.RegistePanel = this._RegistePanel;
            registepanel.CurrentServerNum = this._CurrentServerNum;
            registepanel.Password = this._Password;
            registepanel.SecondPassword = this._SecondPassword;
            registepanel.ServerList = this._ServerList;
        }
        
        public override void Bind() {
            base.Bind();
            // Use this.UserLoginScreen to access the viewmodel.
            // Use this method to subscribe to the view-model.
            // Any designer bindings are created in the base implementation.
            if (_BindPassword) {
                this.BindProperty(this.UserLoginScreen.PasswordProperty, this.PasswordChanged, _PasswordOnlyWhenChanged);
            }
            if (_BindSecondPassword) {
                this.BindProperty(this.UserLoginScreen.SecondPasswordProperty, this.SecondPasswordChanged, _SecondPasswordOnlyWhenChanged);
            }
            if (_BindSecondPassword) {
                this.BindInputFieldToProperty(_SecondPasswordInput, this.UserLoginScreen.SecondPasswordProperty);
            }
            if (_BindUsername) {
                this.BindInputFieldToProperty(_UsernameInput, this.UserLoginScreen.UsernameProperty);
            }
            if (_BindPassword) {
                this.BindInputFieldToProperty(_PasswordInput, this.UserLoginScreen.PasswordProperty);
            }
            if (_BindRegisteUser) {
                this.BindButtonToCommand(_RegisteUserButton, this.UserLoginScreen.RegisteUser);
            }
            if (_BindCloseRegistePanel) {
                this.BindButtonToCommand(_CloseRegistePanelButton, this.UserLoginScreen.CloseRegistePanel);
            }
            if (_BindUsername) {
                this.BindProperty(this.UserLoginScreen.UsernameProperty, this.UsernameChanged, _UsernameOnlyWhenChanged);
            }
        }
        
        public virtual void PasswordChanged(String arg1) {
        }
        
        public virtual void SecondPasswordChanged(String arg1) {
        }
        
        public virtual void UsernameChanged(String arg1) {
        }
        
        public virtual void ExecuteUserLogin(UserLoginCommand command) {
            command.Sender = UserLoginScreen;
            UserLoginScreen.UserLogin.OnNext(command);
        }
        
        public virtual void ExecuteCloseRegistePanel(CloseRegistePanelCommand command) {
            command.Sender = UserLoginScreen;
            UserLoginScreen.CloseRegistePanel.OnNext(command);
        }
        
        public virtual void ExecuteShowRegistePanel(ShowRegistePanelCommand command) {
            command.Sender = UserLoginScreen;
            UserLoginScreen.ShowRegistePanel.OnNext(command);
        }
        
        public virtual void ExecuteTest01Login(Test01LoginCommand command) {
            command.Sender = UserLoginScreen;
            UserLoginScreen.Test01Login.OnNext(command);
        }
        
        public virtual void ExecuteTest02Login(Test02LoginCommand command) {
            command.Sender = UserLoginScreen;
            UserLoginScreen.Test02Login.OnNext(command);
        }
        
        public virtual void ExecuteTest03Login(Test03LoginCommand command) {
            command.Sender = UserLoginScreen;
            UserLoginScreen.Test03Login.OnNext(command);
        }
        
        public virtual void ExecuteRegisteUser(RegisteUserCommand command) {
            command.Sender = UserLoginScreen;
            UserLoginScreen.RegisteUser.OnNext(command);
        }
    }
}
