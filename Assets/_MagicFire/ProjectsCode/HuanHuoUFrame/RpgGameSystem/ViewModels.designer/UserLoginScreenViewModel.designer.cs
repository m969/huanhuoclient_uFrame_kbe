// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace MagicFire.HuanHuoUFrame {
    using MagicFire.HuanHuoUFrame;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.Kernel.Serialization;
    using uFrame.MVVM;
    using uFrame.MVVM.Bindings;
    using uFrame.MVVM.ViewModels;
    using UniRx;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public partial class UserLoginScreenViewModelBase : uFrame.MVVM.ViewModels.ViewModel {
        
        private P<String> _UsernameProperty;
        
        private P<String> _CurrentServerIpProperty;
        
        private P<MagicFire.HuanHuoUFrame.RegistePanel> _RegistePanelProperty;
        
        private P<Int32> _CurrentServerNumProperty;
        
        private P<String> _PasswordProperty;
        
        private P<String> _SecondPasswordProperty;
        
        private P<UnityEngine.UI.Dropdown> _ServerListProperty;
        
        private Signal<UserLoginCommand> _UserLogin;
        
        private Signal<CloseRegistePanelCommand> _CloseRegistePanel;
        
        private Signal<ShowRegistePanelCommand> _ShowRegistePanel;
        
        private Signal<Test01LoginCommand> _Test01Login;
        
        private Signal<Test02LoginCommand> _Test02Login;
        
        private Signal<Test03LoginCommand> _Test03Login;
        
        private Signal<RegisteUserCommand> _RegisteUser;
        
        public UserLoginScreenViewModelBase(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
        
        public virtual P<String> UsernameProperty {
            get {
                return _UsernameProperty;
            }
            set {
                _UsernameProperty = value;
            }
        }
        
        public virtual P<String> CurrentServerIpProperty {
            get {
                return _CurrentServerIpProperty;
            }
            set {
                _CurrentServerIpProperty = value;
            }
        }
        
        public virtual P<MagicFire.HuanHuoUFrame.RegistePanel> RegistePanelProperty {
            get {
                return _RegistePanelProperty;
            }
            set {
                _RegistePanelProperty = value;
            }
        }
        
        public virtual P<Int32> CurrentServerNumProperty {
            get {
                return _CurrentServerNumProperty;
            }
            set {
                _CurrentServerNumProperty = value;
            }
        }
        
        public virtual P<String> PasswordProperty {
            get {
                return _PasswordProperty;
            }
            set {
                _PasswordProperty = value;
            }
        }
        
        public virtual P<String> SecondPasswordProperty {
            get {
                return _SecondPasswordProperty;
            }
            set {
                _SecondPasswordProperty = value;
            }
        }
        
        public virtual P<UnityEngine.UI.Dropdown> ServerListProperty {
            get {
                return _ServerListProperty;
            }
            set {
                _ServerListProperty = value;
            }
        }
        
        public virtual String Username {
            get {
                return UsernameProperty.Value;
            }
            set {
                UsernameProperty.Value = value;
            }
        }
        
        public virtual String CurrentServerIp {
            get {
                return CurrentServerIpProperty.Value;
            }
            set {
                CurrentServerIpProperty.Value = value;
            }
        }
        
        public virtual MagicFire.HuanHuoUFrame.RegistePanel RegistePanel {
            get {
                return RegistePanelProperty.Value;
            }
            set {
                RegistePanelProperty.Value = value;
            }
        }
        
        public virtual Int32 CurrentServerNum {
            get {
                return CurrentServerNumProperty.Value;
            }
            set {
                CurrentServerNumProperty.Value = value;
            }
        }
        
        public virtual String Password {
            get {
                return PasswordProperty.Value;
            }
            set {
                PasswordProperty.Value = value;
            }
        }
        
        public virtual String SecondPassword {
            get {
                return SecondPasswordProperty.Value;
            }
            set {
                SecondPasswordProperty.Value = value;
            }
        }
        
        public virtual UnityEngine.UI.Dropdown ServerList {
            get {
                return ServerListProperty.Value;
            }
            set {
                ServerListProperty.Value = value;
            }
        }
        
        public virtual Signal<UserLoginCommand> UserLogin {
            get {
                return _UserLogin;
            }
            set {
                _UserLogin = value;
            }
        }
        
        public virtual Signal<CloseRegistePanelCommand> CloseRegistePanel {
            get {
                return _CloseRegistePanel;
            }
            set {
                _CloseRegistePanel = value;
            }
        }
        
        public virtual Signal<ShowRegistePanelCommand> ShowRegistePanel {
            get {
                return _ShowRegistePanel;
            }
            set {
                _ShowRegistePanel = value;
            }
        }
        
        public virtual Signal<Test01LoginCommand> Test01Login {
            get {
                return _Test01Login;
            }
            set {
                _Test01Login = value;
            }
        }
        
        public virtual Signal<Test02LoginCommand> Test02Login {
            get {
                return _Test02Login;
            }
            set {
                _Test02Login = value;
            }
        }
        
        public virtual Signal<Test03LoginCommand> Test03Login {
            get {
                return _Test03Login;
            }
            set {
                _Test03Login = value;
            }
        }
        
        public virtual Signal<RegisteUserCommand> RegisteUser {
            get {
                return _RegisteUser;
            }
            set {
                _RegisteUser = value;
            }
        }
        
        public override void Bind() {
            base.Bind();
            this.UserLogin = new Signal<UserLoginCommand>(this);
            this.CloseRegistePanel = new Signal<CloseRegistePanelCommand>(this);
            this.ShowRegistePanel = new Signal<ShowRegistePanelCommand>(this);
            this.Test01Login = new Signal<Test01LoginCommand>(this);
            this.Test02Login = new Signal<Test02LoginCommand>(this);
            this.Test03Login = new Signal<Test03LoginCommand>(this);
            this.RegisteUser = new Signal<RegisteUserCommand>(this);
            _UsernameProperty = new P<String>(this, "Username");
            _CurrentServerIpProperty = new P<String>(this, "CurrentServerIp");
            _RegistePanelProperty = new P<MagicFire.HuanHuoUFrame.RegistePanel>(this, "RegistePanel");
            _CurrentServerNumProperty = new P<Int32>(this, "CurrentServerNum");
            _PasswordProperty = new P<String>(this, "Password");
            _SecondPasswordProperty = new P<String>(this, "SecondPassword");
            _ServerListProperty = new P<UnityEngine.UI.Dropdown>(this, "ServerList");
        }
        
        public virtual void Execute(UserLoginCommand argument) {
            this.UserLogin.OnNext(argument);
        }
        
        public virtual void Execute(CloseRegistePanelCommand argument) {
            this.CloseRegistePanel.OnNext(argument);
        }
        
        public virtual void Execute(ShowRegistePanelCommand argument) {
            this.ShowRegistePanel.OnNext(argument);
        }
        
        public virtual void Execute(Test01LoginCommand argument) {
            this.Test01Login.OnNext(argument);
        }
        
        public virtual void Execute(Test02LoginCommand argument) {
            this.Test02Login.OnNext(argument);
        }
        
        public virtual void Execute(Test03LoginCommand argument) {
            this.Test03Login.OnNext(argument);
        }
        
        public virtual void Execute(RegisteUserCommand argument) {
            this.RegisteUser.OnNext(argument);
        }
        
        public override void Read(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Read(stream);
            this.Username = stream.DeserializeString("Username");;
            this.CurrentServerIp = stream.DeserializeString("CurrentServerIp");;
            this.CurrentServerNum = stream.DeserializeInt("CurrentServerNum");;
            this.Password = stream.DeserializeString("Password");;
            this.SecondPassword = stream.DeserializeString("SecondPassword");;
        }
        
        public override void Write(uFrame.Kernel.Serialization.ISerializerStream stream) {
            base.Write(stream);
            stream.SerializeString("Username", this.Username);
            stream.SerializeString("CurrentServerIp", this.CurrentServerIp);
            stream.SerializeInt("CurrentServerNum", this.CurrentServerNum);
            stream.SerializeString("Password", this.Password);
            stream.SerializeString("SecondPassword", this.SecondPassword);
        }
        
        protected override void FillCommands(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelCommandInfo> list) {
            base.FillCommands(list);
            list.Add(new ViewModelCommandInfo("UserLogin", UserLogin) { ParameterType = typeof(UserLoginCommand) });
            list.Add(new ViewModelCommandInfo("CloseRegistePanel", CloseRegistePanel) { ParameterType = typeof(CloseRegistePanelCommand) });
            list.Add(new ViewModelCommandInfo("ShowRegistePanel", ShowRegistePanel) { ParameterType = typeof(ShowRegistePanelCommand) });
            list.Add(new ViewModelCommandInfo("Test01Login", Test01Login) { ParameterType = typeof(Test01LoginCommand) });
            list.Add(new ViewModelCommandInfo("Test02Login", Test02Login) { ParameterType = typeof(Test02LoginCommand) });
            list.Add(new ViewModelCommandInfo("Test03Login", Test03Login) { ParameterType = typeof(Test03LoginCommand) });
            list.Add(new ViewModelCommandInfo("RegisteUser", RegisteUser) { ParameterType = typeof(RegisteUserCommand) });
        }
        
        protected override void FillProperties(System.Collections.Generic.List<uFrame.MVVM.ViewModels.ViewModelPropertyInfo> list) {
            base.FillProperties(list);
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_UsernameProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_CurrentServerIpProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_RegistePanelProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_CurrentServerNumProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_PasswordProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_SecondPasswordProperty, false, false, false, false));
            // PropertiesChildItem
            list.Add(new ViewModelPropertyInfo(_ServerListProperty, false, false, false, false));
        }
    }
    
    public partial class UserLoginScreenViewModel {
        
        public UserLoginScreenViewModel(uFrame.Kernel.IEventAggregator aggregator) : 
                base(aggregator) {
        }
    }
}
